@model IEnumerable<OgrenciPortali.DTOs.ListCoursesDTO>
@{
    ViewBag.Title = "Genel Dersler";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>@ViewBag.Title</h2>
        <p>
            @Html.ActionLink("Yeni Ders Tanımla", "Add", "Courses", null, new { @class = "btn btn-primary" })
        </p>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <table id="coursesTable" class="table table-striped table-bordered" style="width: 100%">
                <thead class="thead-dark">
                <tr>
                    <th>Bölüm</th>
                    <th>Ders Kodu</th>
                    <th>Ders Adı</th>
                    <th>Kredi</th>
                    <th>İşlemler</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.DepartmentName)</td>
                        <td>@Html.DisplayFor(modelItem => item.CourseCode)</td>
                        <td>@Html.DisplayFor(modelItem => item.CourseName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Credits)</td>
                        <td class="text-center">
                            @Html.ActionLink("Düzenle", "Edit", new { id = item.CourseId }, new { @class = "btn btn-sm btn-info" })
                            <button type="button" class="btn btn-outline-danger btn-sm delete-course"
                                    data-course-id="@item.CourseId" data-course-name="@item.CourseName">
                                <i class="bi bi-trash"></i> Sil
                            </button>
                        </td>

                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteConfirmModalLabel">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>Ders Silme Onayı
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Bu dersi silmek istediğinize emin misiniz?</p>
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <strong>Uyarı:</strong> Bu işlem geri alınamaz!
                </div>
                <p class="mb-0">
                    <strong>Ders Adı:</strong> <span id="courseNameToDelete"></span>
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash me-2"></i>Sil
                </button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            $('#coursesTable').DataTable({
                language: {
                    url: '/Content/datatables/i18n/tr.json'
                },
                responsive: true
            });
        });
    </script>

    <script>
        if (sessionStorage.getItem('bearerToken') != null)
            var token = sessionStorage.getItem('bearerToken');

        document.addEventListener("DOMContentLoaded",
            function() {
                initializeDeleteModal();
            });

        function initializeDeleteModal() {
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            const deleteButtons = document.querySelectorAll('.delete-course');
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            const courseNameSpan = document.getElementById('courseNameToDelete');
            let courseIdToDelete = null;

            deleteButtons.forEach(button => {
                button.addEventListener('click',
                    function() {
                        courseIdToDelete = this.dataset.courseId;
                        const courseName = this.dataset.courseName;
                        courseNameSpan.textContent = courseName;
                        deleteModal.show();
                    });
            });

            confirmDeleteBtn.addEventListener('click',
                function() {
                    if (courseIdToDelete) {
                        fetch(`http://localhost:8000/api/courses/delete/${courseIdToDelete}`,
                                {
                                    method: 'GET',
                                    headers: { Authorization: `Bearer ${token}` }
                                }
                            )
                            .then(resp => {
                                if (resp.ok) {
                                    deleteModal.hide();
                                    location.reload();
                                } else {
                                    console.error('Kullanıcı silinirken hata oluştu.');
                                }
                            });
                    }
                });
        }
    </script>
}