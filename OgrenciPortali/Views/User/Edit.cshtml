@model OgrenciPortali.ViewModels.UpdateUserViewModel

@{
    ViewBag.Title = "Kullanıcı Kaydet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
<style>
    #password-rules li {
        margin-bottom: 2px;
        transition: color 0.3s;
    }

    .invalid { color: #d9534f; }

    .invalid::before {
        content: '✗ ';
        margin-right: 5px;
    }

    .valid { color: #4bbf73; }

    .valid::before {
        content: '✓ ';
        margin-right: 5px;
    }

    .password-bubble {
        position: absolute;
        bottom: calc(100% + 10px);
        left: 0;
        width: 100%;
        background-color: #343a40;
        color: white;
        padding: 15px;
        border-radius: 8px;
        z-index: 10;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .password-bubble::after {
        content: '';
        position: absolute;
        top: 100%;
        left: 30px;
        border-width: 8px;
        border-style: solid;
        border-color: #343a40 transparent transparent transparent;
    }

    .password-bubble ul {
        list-style-type: none;
        padding-left: 0;
        margin-bottom: 0;
        font-size: 0.9em;
    }
</style>

<div class="container">
    <div class=" row justify-content-center align-content-center" style="min-height: 90vh;">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="bi bi-person-add me-2"></i>Kullanıcı Düzenle | @Model.Name @Model.Surname
                    </h4>
                </div>
                <div class="card-body d-flex align-content-center justify-content-center">





                    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "needs-validation" }))
                    {
                        @*@Html.AntiForgeryToken()*@
                        @Html.HiddenFor(m => m.UserId)
                        @Html.ValidationSummary(false, "", new { @class = "text-danger", required = true })
                        <div class="row" id="form-area">

                            <div class="col-md-6 col-12 mb-3">
                                <label for="@Model.Name" class="form-label">
                                    <i class="bi bi-person me-1"></i>Ad
                                </label> @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = true } })
                            </div>
                            <div class=" col-md-6 col-12 mb-3">
                                <label for="@Model.Name" class="form-label">
                                    <i class="bi bi-person me-1"></i>Soyad
                                </label>
                                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", required = true } })
                            </div>
                            <div class="col-md-6 col-12 mb-3">
                                <label for="@Model.Name" class="form-label">
                                    <i class="bi bi-envelope me-1"></i>Yeni E-Posta
                                </label> @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = true, type = "email" } })
                            </div>
                            <div class="col-md-6 col-12 mb-3">
                                <label for="@Model.Role" class="form-label">
                                    <i class="bi bi-door-open me-1"></i>
                                    Kullanıcı Rolü
                                </label>

                                @Html.DropDownListFor(m => m.Role, Model.RolesList, "Rol Seçiniz", new { @class = "form-select", id = "role" })
                            </div>

                            <div class=" col-md-6 col-12 mb-3" id="department-container" style="display: none;">
                                <label for="@Model.DepartmentId" class="form-label">
                                    <i class="bi bi-building me-1"></i> Bölüm
                                </label>
                                @Html.DropDownListFor(m => m.DepartmentId, Model.DepartmentsList, "Bölüm Seçiniz", new { @class = "form-select", id = "department" })
                            </div>
                            <div class=" col-md-6 col-12 mb-3" id="advisor-container" style="display: none;">
                                <label for="@Model.AdvisorId" class="form-label">
                                    <i class="bi bi-person-vcard me-1"></i> Danışman
                                </label>
                                @Html.DropDownListFor(m => m.AdvisorId, Model.AdvisorsList, "Danışman Seçiniz", new { @class = "form-select", id = "advisor" })
                            </div>

                            <div class=" col-md-6 col-12 mb-3" id="student-no-container" style="display: none;">
                                <label for="@Model.StudentNo" class="form-label">
                                    <i class="bi bi-8-square me-1"></i> Öğrenci Numarası
                                </label>
                                @Html.EditorFor(m => m.StudentNo, new { htmlAttributes = new { @class = "form-control", id = "student-no" } })
                            </div>
                            
                            <div class=" col-md-6 col-12 mb-3" id="student-year-container" style="display: none;">
                                <label for="@Model.StudentYear" class="form-label">
                                    <i class="bi bi-8-square me-1"></i> Öğrenci Sınıfı
                                </label>
                                @Html.EditorFor(m => m.StudentYear, new { htmlAttributes = new { @class = "form-control", id = "student-no" } })
                            </div>

                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary ">
                                    <i class="bi bi-check-lg me-2"></i>Kullanıcıyı Düzenle
                                </button>
                                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Ana Sayfaya Dön
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded',
            function () {
                var roleSelect = document.querySelector("#role");
                var passwordWrapper = document.querySelector('#password-wrapper');
                var studentNoContainer = document.querySelector('#student-no-container');
                var departmentContainer = document.querySelector('#department-container');
                var advisorContainer = document.querySelector('#advisor-container');
                var studentYearContainer = document.querySelector('#student-year-container');


                function handleRoleChange() {
                    var selectedValue = roleSelect.value;
                    var studentNoInput = studentNoContainer.querySelector('input');
                    var departmentSelect = departmentContainer.querySelector('select');
                    var advisorSelect = advisorContainer.querySelector('select');
                    var studentYearInput = studentYearContainer.querySelector('input');


                    studentNoContainer.style.display = 'none';
                    studentNoInput.required = false;
                    departmentContainer.style.display = 'none';
                    departmentSelect.required = false;
                    advisorContainer.style.display = 'none';
                    advisorSelect.required = false;
                    studentYearInput.style.display = 'none';
                    studentYearInput.required = false;

                    if (selectedValue === '3') { // Öğrenci
                        departmentContainer.style.display = 'block';
                        departmentSelect.required = true;
                        studentNoContainer.style.display = 'block';
                        studentNoInput.required = true;
                        studentNoContainer.className = "";
                        studentNoContainer.classList.add("col");
                        studentNoContainer.classList.add("mb-3");
                        advisorContainer.style.display = 'block';
                        advisorSelect.required = true;
                        studentYearContainer.classList.add("col");
                        studentYearContainer.classList.add("mb-3");
                        studentYearContainer.style.display = 'block';
                        studentYearInput.required = false;
                    } else if (selectedValue === '2') { // Danışman
                        departmentContainer.style.display = 'block';
                        departmentSelect.required = true;
                    }
                }

                roleSelect.addEventListener("change", handleRoleChange);
                handleRoleChange();

            });
    </script>
}