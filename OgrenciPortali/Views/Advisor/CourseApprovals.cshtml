@using System.Security.Claims
@using Shared.Enums
@model Shared.DTO.AdvisorApprovalDTO
@{
    ViewBag.Title = "Ders Kayýt Onaylarý";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Stil tanýmlamalarý burada yer alýyor (deðiþiklik yok) */
</style>

@if (User.Identity.IsAuthenticated)
{
    var user = (ClaimsIdentity)User.Identity;
    var fullName = user.FindFirst("full_name")?.Value;
    var department = user.FindFirst("department")?.Value;
    

    <div class="d-flex flex-wrap p-2 p-md-3 gap-2 gap-md-3 justify-content-center align-items-center bg-light shadow-sm rounded mb-3 mb-md-4">
    <div class="text-center text-md-start">
        <strong>Danýþman:</strong> @fullName
    </div>
    @if (department != null)
    {
        <div class="text-center text-md-start">
            <strong>Bölüm:</strong> @department
        </div>
    }
    <div class="text-center text-md-start">
        <strong>Bekleyen Onay:</strong>
        <span class="badge bg-warning text-dark">@Model.PendingStudentGroups.SelectMany(g => g.CourseRequests).Count()</span>
    </div>
</div>
}

<div class="card mb-3 mb-md-4">
    <div class="card-header">
        <h5 class="mb-0"><i class="bi bi-gear-fill me-2"></i>Toplu Ýþlemler</h5>
    </div>
    <div class="card-body">
        <div class="row g-2 g-md-3">
            <div class="col-12 col-md-4">
                <button type="button" id="select-all-btn" class="btn btn-outline-primary w-100 btn-lg">
                    <i class="bi bi-check-square me-1 me-md-2"></i>Tümünü Seç
                </button>
            </div>
            <div class="col-6 col-md-4">
                <button type="button" id="approve-selected-btn" class="btn btn-success w-100 btn-lg" disabled>
                    <i class="bi bi-check-circle me-1 me-md-2"></i><span class="d-none d-sm-inline">Seçilenleri </span>Onayla
                </button>
            </div>
            <div class="col-6 col-md-4">
                <button type="button" id="reject-selected-btn" class="btn btn-danger w-100 btn-lg" disabled>
                    <i class="bi bi-x-circle me-1 me-md-2"></i><span class="d-none d-sm-inline">Seçilenleri </span>Reddet
                </button>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0"><i class="bi bi-list-task me-2"></i>Ders Kayýt Talepleri</h5>
    </div>
    <div class="card-body p-0 p-md-3">
        @if (Model.PendingStudentGroups == null || !Model.PendingStudentGroups.Any())
        {
            <div class="alert alert-info text-center m-3">
                <i class="bi bi-info-circle-fill me-2"></i>
                Henüz onay bekleyen ders kayýt talebi bulunmamaktadýr.
            </div>
        }
        else
        {
            <div class="accordion" id="approvalAccordion">
                @foreach (var studentGroup in Model.PendingStudentGroups)
                {
                    string accordionId = "student-" + studentGroup.StudentId.ToString().Replace("-", "");
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="heading-@accordionId">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@accordionId" aria-expanded="false" aria-controls="collapse-@accordionId">
                                <div class="d-flex justify-content-between w-100 align-items-center pe-3">
                                    <span>
                                        <input type="checkbox" class="form-check-input group-master-checkbox me-2 bg-info" data-target-group="@accordionId" title="Bu öðrencinin tüm derslerini seç/kaldýr">
                                        <strong>@studentGroup.StudentName</strong> (@studentGroup.StudentNo)
                                    </span>
                                    <span class="badge bg-primary rounded-pill">
                                        @studentGroup.CourseRequests.Count Ders Bekliyor (@studentGroup.TotalPendingCredits Kredi)
                                    </span>
                                </div>
                            </button>
                        </h2>
                        <div id="collapse-@accordionId" class="accordion-collapse collapse" aria-labelledby="heading-@accordionId" data-bs-parent="#approvalAccordion">
                            <div class="accordion-body">
                                <div class="text-end mb-2">
                                    <div class="btn-group" role="group">
                                        <button class="btn btn-sm btn-outline-success group-approve-btn" data-target-group="@accordionId"><i class="bi bi-check-all"></i> Bu Öðrencinin Tümünü Onayla</button>
                                        <button class="btn btn-sm btn-outline-danger group-reject-btn" data-target-group="@accordionId"><i class="bi bi-x-octagon"></i> Bu Öðrencinin Tümünü Reddet</button>
                                    </div>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover" style="width: 100%">
                                        <thead class="table-light">
                                            <tr>
                                                <th style="width: 5%;"><input type="checkbox" class="form-check-input d-none row-checkbox-header bg-info"></th>
                                                <th style="width: 15%;">Ders Kodu</th>
                                                <th style="width: 30%;">Ders Adý</th>
                                                <th style="width: 10%;">Kredi</th>
                                                <th style="width: 25%;">Gün/Saat</th>
                                                <th style="width: 15%;">Talep Tarihi</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var approval in studentGroup.CourseRequests)
                                            {
                                                <tr data-student-id="@approval.StudentId" data-offered-course-id="@approval.OfferedCourseId" class="approval-row" data-group="@accordionId">
                                                    <td class="text-center">
                                                        <input type="checkbox" class="form-check-input row-checkbox bg-info">
                                                    </td>
                                                    <td><strong>@approval.CourseCode</strong></td>
                                                    <td>@approval.CourseName</td>
                                                    <td class="text-center">@approval.Credits</td>
                                                    <td>@approval.DayOfWeek @approval.StartTime.ToString("hh\\:mm")-@approval.EndTime.ToString("hh\\:mm")</td>
                                                    <td>@approval.RequestDate.ToString("dd.MM.yyyy HH:mm")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@Html.AntiForgeryToken()

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
            const approveSelectedBtn = document.getElementById('approve-selected-btn');
            const rejectSelectedBtn = document.getElementById('reject-selected-btn');
            const selectAllBtn = document.getElementById('select-all-btn');

            function updateTopButtonStates() {
                const selectedCount = document.querySelectorAll('.row-checkbox:checked').length;
                const hasSelection = selectedCount > 0;

                if (approveSelectedBtn) approveSelectedBtn.disabled = !hasSelection;
                if (rejectSelectedBtn) rejectSelectedBtn.disabled = !hasSelection;

                const allCheckboxes = document.querySelectorAll('.row-checkbox');
                const allChecked = allCheckboxes.length > 0 && Array.from(allCheckboxes).every(cb => cb.checked);

                if (selectAllBtn) {
                    selectAllBtn.innerHTML = allChecked ? '<i class="bi bi-square me-1 me-md-2"></i>Seçimi Temizle' : '<i class="bi bi-check-square me-1 me-md-2"></i>Tümünü Seç';
                    selectAllBtn.className = allChecked ? 'btn btn-outline-secondary w-100 btn-lg' : 'btn btn-outline-primary w-100 btn-lg';
                }
            }

            function getSelectedItems(selector = '.row-checkbox:checked') {
                const selectedCheckboxes = document.querySelectorAll(selector);
                const studentIds = [];
                const offeredCourseIds = [];

                selectedCheckboxes.forEach(cb => {
                    const container = cb.closest('.approval-row');
                    studentIds.push(container.dataset.studentId);
                    offeredCourseIds.push(container.dataset.offeredCourseId);
                });
                return { studentIds, offeredCourseIds };
            }

            async function processApproval(studentIds, offeredCourseIds, newStatus) {
                if (!token) {
                    showFeedbackModal('error', "Güvenlik Hatasý", 'Lütfen sayfayý yenileyiniz.');
                    return;
                }
                if (studentIds.length === 0) {
                    showFeedbackModal('info', "Seçim Yapýlmadý", 'Lütfen iþlem yapmak için en az bir ders seçin.');
                    return;
                }

                const apiUrl = '/api/advisor/update-approval-status';
                const requestData = {
                    StudentIds: studentIds,
                    OfferedCourseIds: offeredCourseIds,
                    NewStatus: newStatus
                };

                document.querySelectorAll('.btn').forEach(btn => btn.disabled = true);

                try {
                    const response = await fetch(`/ApiProxy/Post?apiUrl=${encodeURIComponent(apiUrl)}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify(requestData)
                    });

                    const result = await response.json();

                    if (response.ok) {
                        showFeedbackModal("success", "Ýþlem Baþarýlý", result.message, null, null, () => window.location.reload());
                    } else {
                        showFeedbackModal("error", "Baþarýsýz Ýþlem", result.message || 'Bir hata oluþtu.', null, null, () => window.location.reload());
                    }
                } catch (error) {
                    showFeedbackModal('error', 'Að Hatasý', 'Sunucu ile iletiþim kurulamadý.');
                } finally {
                     document.querySelectorAll('.btn').forEach(btn => btn.disabled = false);
                     updateTopButtonStates();
                }
            }

            // --- Event Listeners ---

            // Toplu Onayla/Reddet Butonlarý
            if (approveSelectedBtn) {
                approveSelectedBtn.addEventListener('click', function() {
                    const selected = getSelectedItems();
                    if (selected.studentIds.length > 0) {
                        processApproval(selected.studentIds, selected.offeredCourseIds, @((int)ApprovalStatus.Onaylandý));
                    }
                });
            }

            if (rejectSelectedBtn) {
                rejectSelectedBtn.addEventListener('click', function() {
                    const selected = getSelectedItems();
                     if (selected.studentIds.length > 0) {
                        processApproval(selected.studentIds, selected.offeredCourseIds, @((int)ApprovalStatus.Reddedildi));
                    }
                });
            }

            // Genel Tümünü Seç/Temizle Butonu
            if (selectAllBtn) {
                selectAllBtn.addEventListener('click', function() {
                    const allCheckboxes = document.querySelectorAll('.row-checkbox');
                    const shouldCheck = !Array.from(allCheckboxes).every(cb => cb.checked);
                    allCheckboxes.forEach(cb => cb.checked = shouldCheck);
                    document.querySelectorAll('.group-master-checkbox').forEach(gcb => gcb.checked = shouldCheck);
                    updateTopButtonStates();
                });
            }

            // Grup içi checkbox'lar
            document.querySelectorAll('.row-checkbox').forEach(cb => {
                cb.addEventListener('change', () => {
                    const groupName = cb.closest('.approval-row').dataset.group;
                    const groupCheckboxes = document.querySelectorAll(`.approval-row[data-group="${groupName}"] .row-checkbox`);
                    const allCheckedInGroup = groupCheckboxes.length > 0 && Array.from(groupCheckboxes).every(gcb => gcb.checked);
                    const groupMasterCheckbox = document.querySelector(`.group-master-checkbox[data-target-group="${groupName}"]`);
                    if(groupMasterCheckbox) groupMasterCheckbox.checked = allCheckedInGroup;
                    updateTopButtonStates();
                });
            });

            // Grup baþlýðýndaki master checkbox'lar
            document.querySelectorAll('.group-master-checkbox').forEach(masterCb => {
                masterCb.addEventListener('change', function() {
                    const groupName = this.dataset.targetGroup;
                    document.querySelectorAll(`.approval-row[data-group="${groupName}"] .row-checkbox`).forEach(cb => {
                        cb.checked = this.checked;
                    });
                    updateTopButtonStates();
                });
            });

            // Grup içi Toplu Onayla/Reddet Butonlarý
            document.querySelectorAll('.group-approve-btn, .group-reject-btn').forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    const groupName = this.dataset.targetGroup;
                    const isApprove = this.classList.contains('group-approve-btn');
                    const selected = getSelectedItems(`.approval-row[data-group="${groupName}"] .row-checkbox`);
                    processApproval(selected.studentIds, selected.offeredCourseIds, isApprove ? @((int)ApprovalStatus.Onaylandý) : @((int)ApprovalStatus.Reddedildi));
                });
            });

            updateTopButtonStates();
        });
    </script>
}