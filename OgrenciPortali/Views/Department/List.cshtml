@model OgrenciPortali.ViewModels.DepartmentListViewModel

@{
    ViewBag.Title = "Bölüm Listesi";
}

<body>
    <div class="d-flex justify-content-center align-self-center">
        <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteConfirmModalLabel">Emin misiniz?</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Bu bölümü silmek istediğinize emin misiniz? Bu işlem geri alınamaz!</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Sil</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2>@ViewBag.Title</h2>
            <p>
                @Html.ActionLink("Yeni Bölüm Tanımla", "Add", "Department", null, new { @class = "btn btn-primary" })
            </p>
        </div>

        <div class="card shadow-sm">
            <div class="card-body">
                <table id="coursesTable" class="table table-striped table-bordered" style="width: 100%">
                    <thead class="thead-dark">
                        <tr>
                            <th class="text-center">Bölüm Kodu</th>
                            <th class="text-center">Bölüm Adı</th>
                            <th class="text-center">İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Departments)
                        {
                            <tr>
                                <td class="text-center">@Html.DisplayFor(modelItem => item.DepartmentCode)</td>
                                <td class="text-center">@Html.DisplayFor(modelItem => item.DepartmentName)</td>
                                <td class="text-center align-items-center">
                                    @Html.ActionLink("Düzenle", "Edit", "Department", new { id = item.DepartmentId }, new { @class = "btn btn-sm btn-info" })
                                    <button type="button" class="btn btn-outline-danger btn-sm delete-course"
                                            data-department-id="@item.DepartmentId" data-department-name="@item.DepartmentName">
                                        <i class="bi bi-trash"></i> Sil
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteConfirmModalLabel">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>Bölüm Silme Onayı
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="mb-3">Bu bölümü silmek istediğinize emin misiniz?</p>
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <strong>Uyarı:</strong> Bu işlem geri alınamaz!
                    </div>
                    <p class="mb-0">
                        <strong>Bölüm Adı:</strong> <span id="departmentNameToDelete"></span>
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                        <i class="bi bi-trash me-2"></i>Sil
                    </button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {

        <script>
            $(document).ready(function () {
                $('#coursesTable').DataTable({
                    language: {
                        url: '/Content/datatables/i18n/tr.json'
                    },
                    responsive: true
                });
            });
        </script>

        <script>
            if (sessionStorage.getItem('bearerToken') != null)
                var token = sessionStorage.getItem('bearerToken');

            document.addEventListener("DOMContentLoaded",
                function () {
                    initializeDeleteModal();
                });

            function initializeDeleteModal() {
                const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
                const deleteButtons = document.querySelectorAll('.delete-course');
                const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
                const courseNameSpan = document.getElementById('departmentNameToDelete');
                let departmentIdToDelete = null;

                deleteButtons.forEach(button => {
                    button.addEventListener('click',
                        function () {
                            departmentIdToDelete = this.dataset.departmentId;
                            const courseName = this.dataset.departmentName;
                            courseNameSpan.textContent = courseName;
                            deleteModal.show();
                        });
                });

                confirmDeleteBtn.addEventListener('click',
                    function () {
                        if (departmentIdToDelete) {
                            fetch(`http://localhost:8000/api/departments/delete/${departmentIdToDelete}`,
                                {
                                    method: 'GET',
                                    headers: { Authorization: `Bearer ${token}` }
                                }
                            )
                                .then(resp => {
                                    if (resp.ok) {
                                        deleteModal.hide();
                                        location.reload();
                                    } else {
                                        console.error('Kullanıcı silinirken hata oluştu.');
                                    }
                                });
                        }
                    });
            }
        </script>
    }

</body>