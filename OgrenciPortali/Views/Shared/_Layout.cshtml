@using System.Security.Claims
@using Roles = Shared.Enums.Roles
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Öğrenci Portal</title>
    @Styles.Render("~/Content/css")
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
</head>
<body>
@{
    var isIndexPage = ViewContext.RouteData.Values["action"].ToString().Equals("Index", StringComparison.OrdinalIgnoreCase) &&
                      ViewContext.RouteData.Values["controller"].ToString().Equals("Home", StringComparison.OrdinalIgnoreCase);
}

<nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
    <div class="container-fluid">
        @Html.ActionLink("Öğrenci Portal", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })

        <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                title="Gezintiyi aç/kapat" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    @Html.ActionLink("Ana Sayfa", "Index", "Home", new { area = "" }, new { @class = "nav-link" })
                </li>
            </ul>

            @if (User.Identity.IsAuthenticated)
            {
                var claimsIdentity = User.Identity as ClaimsIdentity;
                var userFullName = claimsIdentity?.FindFirst("full_name").Value;
                var userEmail = claimsIdentity?.FindFirst("user_email")?.Value;
                var userDepartment = claimsIdentity?.FindFirst("department")?.Value;
                var userStudentNo = claimsIdentity?.FindFirst("student_no")?.Value;

                <div class="navbar-nav ms-auto d-flex align-items-center">
                    <!-- Kullanıcı bilgileri (sadece büyük ekranlarda görünür) -->
                    <div class="d-none d-lg-flex flex-column me-3 text-end">
                        <small class="text-light">@userEmail</small>
                        @if (!string.IsNullOrEmpty(userDepartment))
                        {
                            <small class="text-muted">@userDepartment</small>
                        }
                        @if (User.IsInRole(nameof(Roles.Öğrenci)) && !string.IsNullOrEmpty(userStudentNo))
                        {
                            <small class="text-muted">@userStudentNo</small>
                        }
                    </div>

                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown"
                           role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center me-2"
                                 style="width: 32px; height: 32px;">
                                <i class="bi bi-person-fill text-white"></i>
                            </div>
                            <span class="d-none d-sm-inline">@userFullName</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                            <li class="d-lg-none">
                                <div class="dropdown-header">
                                    <div class="fw-bold">@userFullName</div>
                                    <div class="small text-muted">@userEmail</div>
                                    @if (!string.IsNullOrEmpty(userDepartment))
                                    {
                                        <div class="small text-muted">@userDepartment</div>
                                    }
                                    @if (User.IsInRole(nameof(Roles.Öğrenci)) && !string.IsNullOrEmpty(userStudentNo))
                                    {
                                        <div class="small text-muted">Öğrenci No: @userStudentNo</div>
                                    }
                                </div>
                                <hr class="dropdown-divider">
                            </li>

                            <li>
                                <a class="dropdown-item" href="@Url.Action("ChangePassword", "User")">
                                    <i class="bi bi-key me-2"></i>Şifre Değiştir
                                </a>
                            </li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li>
                                <a class="dropdown-item" href="@Url.Action("Logout", "User")">
                                    <i class="bi bi-box-arrow-right me-2"></i>Çıkış Yap
                                </a>
                            </li>
                        </ul>
                    </li>
                </div>
            }
            else
            {
                <div class="navbar-nav ms-auto">
                    <li class="nav-item">
                        @Html.ActionLink("Giriş Yap", "Login", "User", new { area = "" }, new { @class = "nav-link" })
                    </li>
                </div>
            }
        </div>
    </div>
</nav>
@if (User.Identity.IsAuthenticated)
{
    var claimsIdentity = User.Identity as ClaimsIdentity;

    var userIsFirstLogin = claimsIdentity?.FindFirst("first_login")?.Value;
    if (userIsFirstLogin?.ToLower() == "true" && isIndexPage && Session["PasswordChangeModalShown"] == null)
    {
        <div class="modal fade" id="firstLoginModal" tabindex="-1" aria-labelledby="firstLoginModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
            <div Class="modal-dialog modal-dialog-centered">
                <div Class="modal-content border-warning">
                    <div Class="modal-header bg-warning text-dark">
                        <h5 Class="modal-title" id="firstLoginModalLabel">
                            <i Class="bi bi-exclamation-triangle-fill me-2"></i>Şifre Değiştirme Gerekli
                        </h5>
                    </div>
                    <div Class="modal-body">
                        <div Class="alert alert-info mb-3">
                            <i Class="bi bi-info-circle-fill me-2"></i>
                            <strong> Hoş geldiniz!</strong> Güvenliğiniz için ilk girişinizde şifrenizi değiştirmenizi öneriyoruz.
                        </div>
                        <p Class="mb-3">Sistem güvenliği açısından yeni şifreniz aşağıdaki kriterleri karşılamalıdır:</p>
                        <ul Class="list-unstyled">
                            <li> <i Class="bi bi-check-circle text-success me-2"></i>En az 8 karakter</li>
                            <li> <i Class="bi bi-check-circle text-success me-2"></i>En az 1 büyük harf</li>
                            <li> <i Class="bi bi-check-circle text-success me-2"></i>En az 1 küçük harf</li>
                            <li> <i Class="bi bi-check-circle text-success me-2"></i>En az 1 rakam</li>
                            <li> <i Class="bi bi-check-circle text-success me-2"></i>En az 1 özel karakter</li>
                        </ul>
                    </div>
                    <div Class="modal-footer">
                        <button type="button" Class="btn btn-outline-secondary" onclick="dismissPasswordModal()">
                            Daha Sonra
                        </button>
                        <a href="@Url.Action("ChangePassword", "User")" class="btn btn-warning">
                            <i Class="bi bi-key me-2"></i>Şifre Değiştir
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
}

<div class="wrapper">
    <aside id="sidebar">
        <div class="d-flex">
            <button id="toggle-btn" class="d-flex justify-content-center" type="button">
                <i class='bx bx-menu bx-sm'></i>
            </button>

            <div class="sidebar-logo">
                <a href="@Url.Action("Index", "Home")">Öğrenci Yönetim</a>
            </div>
        </div>

        <ul class="sidebar-nav">
            @if (User.Identity.IsAuthenticated)
            {
                var claimsIdentity = User.Identity as ClaimsIdentity;
                // Öğrenci Menüsü
                if (User.IsInRole(nameof(Shared.Enums.Roles.Öğrenci)))
                {
                    <li class="sidebar-item">
                        <a class="sidebar-link" href="@Url.Action("Enroll", "Student")">
                            <i class='bx bx-calendar-check bx-sm'></i> <span>Ders Seçimi</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a class="sidebar-link" href="@Url.Action("MyCourses", "Student")">
                            <i class='bx bx-book bx-sm'></i> <span>Seçilen Derslerim</span>
                        </a>
                    </li>
                }

                // Danışman Menüsü
                if (User.IsInRole(nameof(Roles.Danışman)))
                {
                    <li class="sidebar-item">
                        <a class="sidebar-link" href="@Url.Action("CourseApprovals", "Advisor")">
                            <i class='bx bx-check-circle bx-sm'></i> <span>Ders Onayları</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a class="sidebar-link" href="@Url.Action("AdvisedStudentList", "Advisor")">
                            <i class='bx bx-user-check bx-sm'></i> <span>Danışan Öğrenciler</span>
                        </a>
                    </li>
                }

                // Admin Menüsü
                if (User.IsInRole(nameof(Roles.Admin)))
                {
                    <li class="sidebar-item">
                        <a class="sidebar-link has-dropdown collapsed" href="#" data-bs-toggle="collapse" data-bs-target="#auth" aria-expanded="false" aria-controls="auth">
                            <i class='bx bx-shield-half bx-sm'></i>
                            <span>Kullanıcı Yönetimi</span>
                        </a>
                        <ul id="auth" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("List", "User")">Kullanıcı Listesi</a>
                            </li>
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Register", "User")">Yeni Kullanıcı Ekle</a>
                            </li>
                        </ul>
                    </li>

                    <li class="sidebar-item">
                        <a class="sidebar-link has-dropdown collapsed" href="#" data-bs-toggle="collapse" data-bs-target="#course" aria-expanded="false" aria-controls="course">
                            <i class='bx bx-book bx-sm'></i>
                            <span>Ders Yönetimi</span>
                        </a>
                        <ul id="course" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("List", "Courses")">Genel Ders Listesi</a>
                            </li>
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Add", "Courses")">Yeni Ders Tanımla</a>
                            </li>
                            <li class="sidebar-item-divider"></li>
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("List", "OfferedCourses")">Açılan Dersler Listesi</a>
                            </li>
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Add", "OfferedCourses")">Döneme Ders Ekle</a>
                            </li>
                        </ul>
                    </li>

                    <li class="sidebar-item">
                        <a class="sidebar-link has-dropdown collapsed" href="#" data-bs-toggle="collapse" data-bs-target="#department" aria-expanded="false" aria-controls="department">
                            <i class='bx bx-buildings bx-sm'></i>
                            <span>Bölüm Yönetimi</span>
                        </a>
                        <ul id="department" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("List", "Department")">Bölüm Listesi</a>
                            </li>
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Add", "Department")">Bölüm Ekle</a>
                            </li>
                        </ul>
                    </li>

                    <li class="sidebar-item">
                        <a class="sidebar-link has-dropdown collapsed" href="#" data-bs-toggle="collapse" data-bs-target="#semester" aria-expanded="false" aria-controls="semester">
                            <i class='bx bx-calendar bx-sm'></i>
                            <span>Dönem Yönetimi</span>
                        </a>
                        <ul id="semester" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("List", "Semester")">Dönem Listesi</a>
                            </li>
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Add", "Semester")">Dönem Ekle</a>
                            </li>
                        </ul>
                    </li>
                }
            }
        </ul>

        <div class="sidebar-footer">
            <a class="sidebar-link" href="@Url.Action("Logout", "User")">
                <i class="fa-solid fa-arrow-right-from-bracket"></i>
                <span>Çıkış Yap</span>
            </a>
        </div>
    </aside>

    <div class="main container mt-3">
        @RenderBody()
        <hr/>
    </div>

</div>
<footer>
    <div class="container-fluid footer">
        <div class="d-flex">
            <div>
                <ul>
                    <li>ASD</li>
                    <li>ASD</li>
                    <li>ASD</li>
                    <li>ASD</li>
                    <li>ASD</li>
                </ul>
            </div>
        </div>
    </div>
    <p>&copy; @DateTime.Now.Year - ASP.NET Uygulamam</p>
</footer>
@Html.Partial("_FeedbackModal") @Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/datatables")
@Scripts.Render("~/bundles/modernizr")
<script src="~/Scripts/js/app.js"></script>

<script>
    // Bearer token management
    @if (TempData["BearerToken"] != null)
    {
        <text>
            sessionStorage.setItem('bearerToken', '@TempData["BearerToken"]');
        </text>
    }

// Setup AJAX to always include Bearer token
    $(document).ajaxSend(function(event, xhr, settings) {
        var token = sessionStorage.getItem('bearerToken');
        if (token && !settings.crossDomain) {
            xhr.setRequestHeader('Authorization', 'Bearer ' + token);
        }
    });

// Clear token on logout
    function clearBearerToken() {
        sessionStorage.removeItem('bearerToken');
    }
</script>

<script>
    function dismissPasswordModal() {
        const modal = window.bootstrap.Modal.getInstance(document.getElementById('firstLoginModal'));
        if (modal) {
            modal.hide();
        }

        fetch('@Url.Action("DismissPasswordReminder", "User")',
            {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                }
            });
    }

    document.addEventListener('DOMContentLoaded',
        function() {
            @if (User.Identity.IsAuthenticated)
            {
                var claimsIdentity = User.Identity as ClaimsIdentity;
                var userIsFirstLogin = claimsIdentity?.FindFirst("first_login").Value;

                <text>
                    if (@Html.Raw(string.IsNullOrEmpty(userIsFirstLogin)).ToString().ToLower() && (@Html.Raw(userIsFirstLogin != null && userIsFirstLogin.ToLower() == "true").ToString().ToLower() && @Html.Raw(isIndexPage.ToString().ToLower()) && @(Session["PasswordChangeModalShown"] == null ? "true" : "false"))) {
                        const firstLoginModal = new window.bootstrap.Modal(document.getElementById('firstLoginModal'));
                        firstLoginModal.show();

                        document.getElementById('firstLoginModal').addEventListener('hidden.bs.modal',
                            function() {
                                fetch('@Url.Action("MarkPasswordModalShown", "User")',
                                    {
                                        method: 'POST',
                                        headers: {
                                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                                        }
                                    });
                            });
                    }
                </text>
            }
        });
</script>
@*<script src="https://unpkg.com/@popperjs/core@2/dist/umd/popper.js"></script>*@

@RenderSection("scripts", required: false)
</body>
</html>